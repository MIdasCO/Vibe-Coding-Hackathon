import { neon } from '@neondatabase/serverless';
import dotenv from 'dotenv';

dotenv.config();

const sql = neon(process.env.DATABASE_URL!);

async function checkAnimalTypes() {
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø—ã –∂–∏–≤–æ—Ç–Ω—ã—Ö –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...\n');
    
    const animalTypes = await sql`
      SELECT id, name, "nameRu", "nameKy", category 
      FROM "AnimalType" 
      ORDER BY category, name
    `;
    
    console.log('üìä –ù–∞–π–¥–µ–Ω–æ —Ç–∏–ø–æ–≤ –∂–∏–≤–æ—Ç–Ω—ã—Ö:', animalTypes.length);
    console.log('\n=== –°–ö–û–¢ (LIVESTOCK) ===');
    const livestock = animalTypes.filter(type => type.category === 'livestock');
    livestock.forEach(type => {
      console.log(`${type.id}: ${type.name} (${type.nameRu}) - ${type.nameKy}`);
    });
    
    console.log('\n=== –î–û–ú–ê–®–ù–ò–ï –ñ–ò–í–û–¢–ù–´–ï (PETS) ===');
    const pets = animalTypes.filter(type => type.category === 'pets');
    pets.forEach(type => {
      console.log(`${type.id}: ${type.name} (${type.nameRu}) - ${type.nameKy}`);
    });
    
    console.log('\nüìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:');
    console.log(`- –°–∫–æ—Ç: ${livestock.length}`);
    console.log(`- –î–æ–º–∞—à–Ω–∏–µ –∂–∏–≤–æ—Ç–Ω—ã–µ: ${pets.length}`);
    console.log(`- –í—Å–µ–≥–æ: ${animalTypes.length}`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ç–∏–ø–æ–≤ –∂–∏–≤–æ—Ç–Ω—ã—Ö:', error);
  }
}

checkAnimalTypes(); 
import fs from 'fs';
import path from 'path';

async function clearUploads() {
  try {
    const uploadsDir = path.join(process.cwd(), 'uploads');
    
    console.log('üóëÔ∏è –û—á–∏—Å—Ç–∫–∞ –ø–∞–ø–∫–∏ uploads...');
    console.log(`üìÅ –ü–∞–ø–∫–∞: ${uploadsDir}`);
    
    if (!fs.existsSync(uploadsDir)) {
      console.log('üìÇ –ü–∞–ø–∫–∞ uploads –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
      return;
    }
    
    // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤
    const files = fs.readdirSync(uploadsDir);
    console.log(`üìÑ –ù–∞–π–¥–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: ${files.length}`);
    
    let deletedCount = 0;
    let keptCount = 0;
    
    for (const file of files) {
      const filePath = path.join(uploadsDir, file);
      const stat = fs.statSync(filePath);
      
      if (stat.isFile()) {
        // –£–¥–∞–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã (SVG –∏ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ JPG)
        if (file.endsWith('.svg') || 
            file.startsWith('placeholder-') ||
            file.startsWith('cow-') ||
            file.startsWith('bull-') ||
            file.startsWith('sheep-') ||
            file.startsWith('goat-') ||
            file.startsWith('horse-') ||
            file.startsWith('chicken-') ||
            file.startsWith('pig-') ||
            file.startsWith('dog-') ||
            file.startsWith('cat-') ||
            file.startsWith('rabbit-') ||
            file.startsWith('bird-')) {
          
          try {
            fs.unlinkSync(filePath);
            console.log(`üóëÔ∏è –£–¥–∞–ª–µ–Ω: ${file}`);
            deletedCount++;
          } catch (error) {
            console.error(`‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è ${file}:`, error);
          }
        } else {
          console.log(`‚è≠Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω: ${file} (–Ω–µ —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª)`);
          keptCount++;
        }
      }
    }
    
    console.log('\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç –æ—á–∏—Å—Ç–∫–∏:');
    console.log(`üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: ${deletedCount}`);
    console.log(`üìÑ –û—Å—Ç–∞–≤–ª–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: ${keptCount}`);
    console.log('‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ uploads:', error);
    throw error;
  }
}

// –ó–∞–ø—É—Å–∫
clearUploads(); 
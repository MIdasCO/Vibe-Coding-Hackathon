import { Pool, neonConfig } from '@neondatabase/serverless';
import { drizzle } from 'drizzle-orm/neon-serverless';
import ws from "ws";
import * as schema from '@shared/schema';
import { config } from 'dotenv';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
config({ override: true }); // override: true –∑–∞—Å—Ç–∞–≤–ª—è–µ—Ç –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ

async function clearNeonAnimals() {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ DATABASE_URL
    if (!process.env.DATABASE_URL) {
      console.error('‚ùå DATABASE_URL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!');
      console.log('üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è DATABASE_URL –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Neon');
      return;
    }

    console.log('üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Neon –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
    console.log('üåê URL:', process.env.DATABASE_URL.replace(/:[^:@]*@/, ':***@')); // –°–∫—Ä—ã–≤–∞–µ–º –ø–∞—Ä–æ–ª—å
    
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Neon
    neonConfig.webSocketConstructor = ws;
    const pool = new Pool({ connectionString: process.env.DATABASE_URL });
    const db = drizzle({ client: pool, schema });

    console.log('üóëÔ∏è –ù–∞—á–∏–Ω–∞–µ–º –æ—á–∏—Å—Ç–∫—É –∫–∞—Ç–∞–ª–æ–≥–∞ –∂–∏–≤–æ—Ç–Ω—ã—Ö –≤ Neon...');
    
    // –£–¥–∞–ª—è–µ–º —Å–≤—è–∑–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ (–∏–∑-–∑–∞ –≤–Ω–µ—à–Ω–∏—Ö –∫–ª—é—á–µ–π)
    
    console.log('üì∏ –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –∂–∏–≤–æ—Ç–Ω—ã—Ö...');
    const photosResult = await db.delete(schema.animalPhotos);
    console.log(`   ‚úÖ –£–¥–∞–ª–µ–Ω–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π: ${photosResult.rowCount || 0}`);
    
    console.log('üé• –£–¥–∞–ª–µ–Ω–∏–µ –≤–∏–¥–µ–æ –∂–∏–≤–æ—Ç–Ω—ã—Ö...');
    const videosResult = await db.delete(schema.animalVideos);
    console.log(`   ‚úÖ –£–¥–∞–ª–µ–Ω–æ –≤–∏–¥–µ–æ: ${videosResult.rowCount || 0}`);
    
    console.log('üìÑ –£–¥–∞–ª–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∂–∏–≤–æ—Ç–Ω—ã—Ö...');
    const docsResult = await db.delete(schema.animalDocuments);
    console.log(`   ‚úÖ –£–¥–∞–ª–µ–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: ${docsResult.rowCount || 0}`);
    
    console.log('‚≠ê –£–¥–∞–ª–µ–Ω–∏–µ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ...');
    const favoritesResult = await db.delete(schema.favorites);
    console.log(`   ‚úÖ –£–¥–∞–ª–µ–Ω–æ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ: ${favoritesResult.rowCount || 0}`);
    
    // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –∂–∏–≤–æ—Ç–Ω—ã–º–∏ (–µ—Å–ª–∏ –µ—Å—Ç—å –ø–æ–ª–µ animalId)
    console.log('üí¨ –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –∂–∏–≤–æ—Ç–Ω—ã–º–∏...');
    try {
      // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ –≤ —Ç–∞–±–ª–∏—Ü–µ messages –µ—Å—Ç—å –ø–æ–ª–µ animalId –∏–ª–∏ animal_id
      const messagesResult = await db.delete(schema.messages);
      console.log(`   ‚úÖ –£–¥–∞–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: ${messagesResult.rowCount || 0}`);
    } catch (error) {
      console.log('   ‚ö†Ô∏è –°–æ–æ–±—â–µ–Ω–∏—è –Ω–µ —É–¥–∞–ª–µ–Ω—ã (–≤–æ–∑–º–æ–∂–Ω–æ, –Ω–µ—Ç —Å–≤—è–∑–∏ —Å –∂–∏–≤–æ—Ç–Ω—ã–º–∏)');
    }
    
    // –£–¥–∞–ª—è–µ–º —Å–∞–º–∏—Ö –∂–∏–≤–æ—Ç–Ω—ã—Ö
    console.log('üêÑ –£–¥–∞–ª–µ–Ω–∏–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–π –∂–∏–≤–æ—Ç–Ω—ã—Ö...');
    const animalsResult = await db.delete(schema.animals);
    console.log(`   ‚úÖ –£–¥–∞–ª–µ–Ω–æ –æ–±—ä—è–≤–ª–µ–Ω–∏–π: ${animalsResult.rowCount || 0}`);
    
    console.log('\nüéâ –ö–∞—Ç–∞–ª–æ–≥ –∂–∏–≤–æ—Ç–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω –≤ Neon –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö!');
    console.log('üìä –ò—Ç–æ–≥–æ —É–¥–∞–ª–µ–Ω–æ:');
    console.log(`   üêÑ –ñ–∏–≤–æ—Ç–Ω—ã—Ö: ${animalsResult.rowCount || 0}`);
    console.log(`   üì∏ –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π: ${photosResult.rowCount || 0}`);
    console.log(`   üé• –í–∏–¥–µ–æ: ${videosResult.rowCount || 0}`);
    console.log(`   üìÑ –î–æ–∫—É–º–µ–Ω—Ç–æ–≤: ${docsResult.rowCount || 0}`);
    console.log(`   ‚≠ê –ò–∑–±—Ä–∞–Ω–Ω–æ–≥–æ: ${favoritesResult.rowCount || 0}`);
    
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
    await pool.end();
    console.log('üîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫—Ä—ã—Ç–æ');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –∫–∞—Ç–∞–ª–æ–≥–∞ –≤ Neon:', error);
    
    const errorMessage = error instanceof Error ? error.message : String(error);
    if (errorMessage.includes('ECONNREFUSED')) {
      console.log('üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É –∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å DATABASE_URL');
    } else if (errorMessage.includes('authentication')) {
      console.log('üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ DATABASE_URL');
    } else if (errorMessage.includes('database') && errorMessage.includes('does not exist')) {
      console.log('üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö');
    }
    
    throw error;
  }
}

// –ó–∞–ø—É—Å–∫
clearNeonAnimals(); 